name: Apple iOS

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_ios:
    strategy:
      matrix:
        lib: [Shared, Static]
        config: [Release, Debug]
      fail-fast: false
    
    runs-on: macos-latest

    env:
      DEPLOYMENT_TARGET: 13.0
      README: ${{ github.workspace }}/README.txt
      GAUSSIAN_LIB_DIR: external/GaussianLib/include

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: >
        cmake -S . -B ${{github.workspace}}/iOS-arm64
        -DCMAKE_SYSTEM_NAME=iOS
        -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"
        -DCMAKE_OSX_DEPLOYMENT_TARGET=${{ env.DEPLOYMENT_TARGET }}
        -DCMAKE_IOS_INSTALL_COMBINED=ON
        -DCMAKE_BUILD_TYPE=${{ matrix.config }}
        -DLLGL_BUILD_STATIC_LIB=${{ matrix.lib == 'Static' && 'ON' || 'OFF' }}
        -DLLGL_BUILD_RENDERER_OPENGLES3=ON
        -DLLGL_BUILD_RENDERER_METAL=ON
        -DLLGL_BUILD_EXAMPLES=ON
        -DGaussLib_INCLUDE_DIR:STRING="${{ env.GAUSSIAN_LIB_DIR }}"

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/iOS-arm64 --config ${{ matrix.config }}
        CURRENT_TIME=$(date)
        echo "LLGL built with Xcode for iOS on $CURRENT_TIME." > ${{ env.README }}

    - name: Upload Binaries
      uses: actions/upload-artifact@v3
      if: matrix.lib == 'Shared' && matrix.config == 'Release'
      with:
        name: LLGL-iOS-${{ matrix.config }}-arm64
        path: |
          ${{ env.README }}
          ${{ github.workspace }}/iOS-arm64/build/libLLGL*.dylib
          ${{ github.workspace }}/iOS-arm64/build/libLLGL*.dylib.dSYM
          ${{ github.workspace }}/iOS-arm64/build/Example_*.app
          ${{ github.workspace }}/iOS-arm64/build/Example_*.app.dSYM
      
