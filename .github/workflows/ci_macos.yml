name: Apple macOS

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_macos:
    strategy:
      matrix:
        ext: [Full, Limited]
        lib: [Shared, Static]
        config: [Release, Debug]
      fail-fast: false

    runs-on: macos-latest

    env:
      README: ${{ github.workspace }}/README.txt
      EXT_FULL: ${{ matrix.ext == 'Full' && 'ON' || 'OFF' }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install dependencies
      run: >
        brew install vulkan-tools

    - name: Configure CMake
      run: >
        cmake -S . -B ${{github.workspace}}/macOS-x64
        -DCMAKE_BUILD_TYPE=${{ matrix.config }}
        -DLLGL_BUILD_STATIC_LIB=${{ matrix.lib == 'Static' && 'ON' || 'OFF' }}
        -DLLGL_BUILD_RENDERER_OPENGL=ON
        -DLLGL_BUILD_RENDERER_METAL=ON
        -DLLGL_BUILD_RENDERER_VULKAN=${{ env.EXT_FULL }}
        -DLLGL_BUILD_EXAMPLES=ON
        -DLLGL_BUILD_TESTS=ON
        -DLLGL_BUILD_WRAPPER_C99=ON

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/macOS-x64 --config ${{ matrix.config }}
        scripts/CompileMetalToMetallib.sh macosx "${{ github.workspace }}/macOS-x64/build" -v
        CURRENT_TIME=$(date)
        echo "LLGL built with Xcode for macOS on $CURRENT_TIME." > ${{ env.README }}
        echo "Place at root of LLGL repository to run examples and testbed." >> ${{ env.README }}

    - name: Upload Binaries
      uses: actions/upload-artifact@v4
      if: ${{ matrix.ext == 'Full' && matrix.lib == 'Static' && matrix.config == 'Release' }}
      with:
        name: LLGL-macOS-${{ matrix.config }}-x86_64
        path: |
          ${{ env.README }}
          ${{ github.workspace }}/macOS-x64/build/libLLGL*.dylib
          ${{ github.workspace }}/macOS-x64/build/Example_*.app
          ${{ github.workspace }}/macOS-x64/build/Testbed*.app
      
